Q2: A Monetary model for customers behavior:
-- cte to calculate RFM (Recency, Frequency, Monetary) metrics for each customer
with RFM as (
    select 
        customer_id,
        -- calculate recency as the difference between the maximum invoice date and the maximum invoice date for each individual customer(last transaction).
        round((select max(to_date(invoicedate, 'mm/dd/yyyy hh24:mi')) from tableretail) - max(to_date(invoicedate, 'mm/dd/yyyy hh24:mi'))) as recency,
        -- calculate frequency as the count of distinct invoices for each customer
        count(distinct invoice)  as frequency,
        -- calculate monetary as the sum of quantity multiplied by price for each customer
        sum(quantity * price) as monetary
    from tableretail
    group by customer_id
),
--CTE to calculate scores 
rfm_scores as (
select  
     customer_id,
     recency,
     frequency,
     monetary,
  -- assign r_score based on the recency, dividing customers into 5 groups
        ntile(5) over (order by recency desc) as r_score,
        ntile(5) over (order by Frequency ) as f_score,
        ntile(5) over (order by Monetary ) as m_score
        from rfm
),
-- CTE to calculate the FM_score, which is the average of f_score and m_score
FM as (
    select 
        customer_id,
        ntile(5) over (order by (f_score + m_score) / 2) as FM_score
    from rfm_scores
)
-- Main query to select RFM metrics, scores, and customer segments
select 
   fm.customer_id,
  recency,
  frequency,
 monetary,
  r_score,
  FM.FM_score,
    -- assign customer segments based on r_score and FM_score combinations
    case 
        when (r_score = 5 and FM_score = 5) or (r_score = 5 and FM_score = 4) or (r_score = 4 and FM_score = 5) then 'Champions'
        when (r_score = 5 and FM_score = 2) or (r_score = 4 and FM_score = 2) or (r_score = 3 and FM_score = 3) or (r_score = 4 and FM_score = 3) then 'Potential Loyalists'
        when (r_score = 5 and FM_score = 3) or (r_score = 4 and FM_score = 4) or (r_score = 3 and FM_score = 5) or (r_score = 3 and FM_score = 4) then 'Loyal Customers'
        when r_score = 5 and FM_score = 1 then 'Recent Customers'
        when (r_score = 4 and FM_score = 1) or (r_score = 3 and FM_score = 1) THEN 'Promising'
        when (r_score = 3 and FM_score = 2) or (r_score = 2 and FM_score = 3) or (r_score = 2 and FM_score = 2) then 'Customers Needing Attention'
        when (r_score = 2 and FM_score = 5) or (r_score = 2 and FM_score = 4) or (r_score = 1 and FM_score = 3) then 'At Risk'
        when (r_score = 1 and FM_score = 5) or (r_score = 1 AND FM_score = 4) then 'Cant Lose Them'
        when (r_score = 1 and FM_score = 2) then 'Hibernating'
        when (r_score = 1 and FM_score = 1) then 'Lost'
        else 'Undefined'
    end as Cust_Segment
from rfm_scores
join FM 
on     rfm_scores.customer_id= FM.customer_id
order by customer_id;
